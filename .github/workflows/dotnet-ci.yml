name: Build and Test GrubPix

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --logger trx --results-directory TestResults

      - name: Upload test results on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: TestResults
          path: TestResults

    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
      JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
      JWT_EXPIRY: ${{ secrets.JWT_EXPIRY }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      CLERK_BACKEND_URL: ${{ secrets.CLERK_BACKEND_URL }}
      CLERK_FRONTEND_URL: ${{ secrets.CLERK_FRONTEND_URL }}
      CLERK_AUDIENCE: ${{ secrets.CLERK_AUDIENCE }}
      EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
